
R version 3.5.1 (2018-07-02) -- "Feather Spray"
Copyright (C) 2018 The R Foundation for Statistical Computing
Platform: x86_64-apple-darwin15.6.0 (64-bit)

R is free software and comes with ABSOLUTELY NO WARRANTY.
You are welcome to redistribute it under certain conditions.
Type 'license()' or 'licence()' for distribution details.

  Natural language support but running in an English locale

R is a collaborative project with many contributors.
Type 'contributors()' for more information and
'citation()' on how to cite R or R packages in publications.

Type 'demo()' for some demos, 'help()' for on-line help, or
'help.start()' for an HTML browser interface to help.
Type 'q()' to quit R.

> pkgname <- "tailr"
> source(file.path(R.home("share"), "R", "examples-header.R"))
> options(warn = 1)
> library('tailr')
Loading required package: foolbox
> 
> base::assign(".oldSearch", base::search(), pos = 'CheckExEnv')
> base::assign(".old_wd", base::getwd(), pos = 'CheckExEnv')
> cleanEx()
> nameEx("can_loop_transform")
> ### * can_loop_transform
> 
> flush(stderr()); flush(stdout())
> 
> ### Name: can_loop_transform_
> ### Title: Tests if a function, provided by its name, can be transformed.
> ### Aliases: can_loop_transform_ can_loop_transform
> 
> ### ** Examples
> 
> factorial <- function(n)
+     if (n <= 1) 1 else n * factorial(n - 1)
> factorial_acc <- function(n, acc = 1)
+     if (n <= 1) acc else factorial_acc(n - 1, n * acc)
> 
> can_loop_transform(factorial) # FALSE -- and prints a warning
Warning: The function cannot be transformed since it contains a recursive call inside a call.
[1] FALSE
> can_loop_transform(factorial_acc) # TRUE
[1] TRUE
> 
> can_loop_transform_(rlang::quo(factorial)) # FALSE -- and prints a warning
Warning: The function cannot be transformed since it contains a recursive call inside a call.
[1] FALSE
> can_loop_transform_(rlang::quo(factorial_acc)) # TRUE
[1] TRUE
> 
> 
> 
> ### * <FOOTER>
> ###
> cleanEx()
> options(digits = 7L)
> base::cat("Time elapsed: ", proc.time() - base::get("ptime", pos = 'CheckExEnv'),"\n")
Time elapsed:  0.143 0.013 0.159 0 0 
> grDevices::dev.off()
null device 
          1 
> ###
> ### Local variables: ***
> ### mode: outline-minor ***
> ### outline-regexp: "\\(> \\)?### [*]+" ***
> ### End: ***
> quit('no')
